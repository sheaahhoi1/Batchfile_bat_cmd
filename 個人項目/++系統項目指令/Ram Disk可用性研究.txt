Ram Disk可用性研究
1.用作BT暫存性緩衝資料夾
2.用作mklink(默認無指令是檔案,指令是資料夾)
mklink與是Unix下(Linux & Mac只是Unix下的分支)的捷徑方式一致

※:mklink在Ram Disk使用有效提升速度&穩定&最安全
mklink 
MKLINK [[/D] | [/H] | [/J]] Link Target
/D      (依WIKI說法稱為快速符號鏈接-已測試,屬性捷徑)建立目錄符號連結。預設是檔案符號連結。
/H      建立永久連結而不是符號連結(這連結可能不能從磁碟/磁區上分離(未測試)
  依WIKI說法這是目錄對抄本A<=>B,B消失A存在,A存在B消失都可以)。
/J      (依WIKI說法稱為慢速符號鏈接-已測試,屬性虛鏡像有檔案數值)建立目錄連接。
Link    指定新符號連結名稱。
Target  指定新連結參照的路徑 (相對或絕對)。

/D 作為連接可以無法被(其他)程式長久標記(程式捷徑慢過/J)
/J 作為連接可以被(其他)程式長久標記(整個資料夾下內容加快一倍O.O)
/H 完美共同體,詳情未知
/H指令依WIKI說法就是一個磁區上的一個檔案
在系統結構上有2個連接(圖示/路徑),
也就是絕對同步(實體連結)2者無分大小永遠一致,
在磁碟/磁區資料層面上理解為2個實體連結2者都
(在遊戲理論上真身只殺了一個另一個都是依舊存在)實體,
從這角度上理論上遊戲就是這類,
一般檔案需要刪除1個檔/資料夾刪除1個圖示就結束,
但實體連結就是被免以上情況,實體連結的另一端都必需刪除,
這時在磁碟/磁區資料層面就算真正刪除
(在遊戲理論上世界上再沒有這個X存在,X才算真正死亡的道理)



3.ReadyBoost包含開機&關機加速功能早在Windows Vista發佈時已短片介紹過
不能用作ReadyBoost因為這功能由win系統
logo開始其實已經使用(登入時載入階段也使
用,理論上會更慢,原因電腦定有可作Ready Boost
磁區,要求數據經Ready Boost磁區優先載入,
失敗後不提示轉用正常轉入,只以軟驅動的情
況下TQC絕對有害系統穩定性,原因在另一點
關機Ready Boost磁區也被系統利用作為加速之用,
Ready Boost磁區系統會全力盡做其目標減少使用硬碟頻密讀取)

4.其他暫存資料夾,除了BT,壓縮程式其他都沒有理由,
因為部份安裝程式依賴暫存資料夾下載/解壓真的安裝檔,
部份更要求重新開機以後再繼續安裝(例子:防毒,防火牆,虛擬驅動程式)
這些安裝檔都是暫存資料夾內
過去從SystemExplorer中看出真正路徑!


=============

mklink是捷徑與.lnk(捷徑)大致相同,但運作模式卻有不同
1.捷徑(.lnk)會跳目標程式&資料夾直接由該目標目錄[路徑](&磁區)上運行
2.mklink(捷徑)會轉移到mklink目錄(作緩衝/鏡化,這種方式之前iphone內部資料夾運作相同)
iphone內部資料夾
app內部資料夾轉換成字號串>00230-00CBC0-3053-5154
有其他app卻將字號串資料夾反轉>app檔名捷徑
(這類捷徑資料夾位置與字號串資料夾內容完全一致[除時更變亦同步-不影響捷徑之下..],
但上層目錄[資料夾路徑位置卻不同])

